name: Validate YAML Files in Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  validate_yaml:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
          fetch-depth: 0

    - name: Get Changed Files
      id: get_changed_files
      run: |
        changed_files=$(git diff --name-only HEAD^..HEAD)
        echo "Changed Files"
        echo "$changed_files"

        # set github action variable for next step
        echo "changed_files=$changed_files" >> $GITHUB_OUTPUT


    - name: Filter YAML Files
      id: filter_yaml_files
      run: |
        changed_files=${{ steps.get_changed_files.outputs.changed_files }}
        
        if [ -n "$changed_files" ]; then
          yaml_files=$(echo "$changed_files" | grep '\.yaml$')
          echo "Found yaml files"
          echo "$yaml_files"

          # set github action variable for next step
          echo "yaml_files=$yaml_files" >> $GITHUB_OUTPUT

        else
          echo "No YAML files were changed."
          exit 0  # Safely exit the action
        fi

    - name: Build List of Files with .spec.name
      id: build_list_with_name
      run: |
        yaml_files=${{ steps.filter_yaml_files.outputs.yaml_files }}
        files_with_spec_name=""

        for file in $yaml_files; do
          foundDomainName=$(yq '.spec.name // ""' "$file")
          if [ -n "$foundDomainName" ]; then
            files_with_spec_name="$files_with_spec_name $file"
          fi
        done

        if [ -z "$files_with_spec_name" ]; then
          echo "No files with .spec.name found. Exiting cleanly."
          exit 0
        fi

        echo "Files with .spec.name:"
        echo "$files_with_spec_name"

        echo "files_with_spec_name=$files_with_spec_name" >> $GITHUB_OUTPUT
